#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;      // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            flavor = "tap-preferred";
        };

        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
        };

        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <135>;
            quick-tap-ms = <0>;
        };

        rgb_encoder: rgb_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            label = "RGB_ENCODER";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
        };

        scroll_encoder: scroll_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
            tap-ms = <100>;
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp GRAVE   &kp N1              &kp N2          &kp N3          &kp N4            &kp N5       &kp UP_ARROW     &kp N6     &kp N7             &kp N8           &kp N9           &kp N0                  &kp BACKSPACE
&kp TAB     &kp Q               &kp W           &kp E           &kp R             &kp T        &kp DOWN_ARROW   &kp Y      &kp U              &kp I            &kp O            &kp P                   &kp BSLH
&kp ESC     &hm LEFT_CONTROL A  &hm LEFT_ALT S  &hm LEFT_GUI D  &hm LEFT_SHIFT F  &kp G        &kp LEFT_ARROW   &kp H      &hm RIGHT_SHIFT J  &hm RIGHT_GUI K  &hm RIGHT_ALT L  &hm RIGHT_CONTROL SEMI  &kp APOS
&kp LSHFT   &kp Z               &kp X           &kp C           &kp V             &kp B        &kp RIGHT_ARROW  &kp N      &kp M              &kp COMMA        &kp DOT          &kp FSLH                &kp RIGHT_SHIFT
&kp C_MUTE  &kp LCTRL           &kp LEFT_ALT    &kp LEFT_GUI    &mo 1             &kp SPACE    &kp ENTER        &kp ENTER  &mo 2              &kp RIGHT_GUI    &kp RIGHT_ALT    &kp RIGHT_CONTROL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            label = "LAYER0";
        };

        layer1 {
            bindings = <
&studio_unlock  &bt BT_SEL 0       &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_CLR  &bt BT_CLR_ALL    &mmv MOVE_UP     &trans         &trans       &trans         &trans         &trans             &trans
&sys_reset      &ext_power EP_TOG  &mkp LCLK        &mkp MCLK     &mkp RCLK   &mkp MB4          &mmv MOVE_DOWN   &kp BACKSPACE  &kp HOME     &kp UP         &kp END        &kp MINUS          &kp EQUAL
&bootloader     &out OUT_TOG       &trans           &trans        &trans      &mkp MB5          &mmv MOVE_LEFT   &kp DEL        &kp LEFT     &kp DOWN       &kp RIGHT      &kp LEFT_BRACKET   &kp RIGHT_BRACKET
&kp LEFT_SHIFT  &rgb_ug RGB_TOG    &rgb_ug RGB_EFR  &trans        &trans      &trans            &mmv MOVE_RIGHT  &kp CAPS       &kp PAGE_UP  &trans         &kp PAGE_DOWN  &trans             &kp RIGHT_SHIFT
&kp C_MUTE      &kp LEFT_CONTROL   &kp LEFT_ALT     &kp LEFT_GUI  &trans      &soft_off         &mkp LCLK        &trans         &trans       &kp RIGHT_GUI  &kp RIGHT_ALT  &kp RIGHT_CONTROL
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "LAYER1";
        };

        layer2 {
            bindings = <
&kp F1          &kp F2            &kp F3        &kp F4        &kp F5  &kp F6    &mmv MOVE_UP     &kp F7     &kp F8  &kp F9         &kp F10          &kp F11            &kp F12
&trans          &trans            &trans        &trans        &trans  &trans    &mmv MOVE_DOWN   &trans     &trans  &trans         &trans           &trans             &sys_reset
&trans          &trans            &trans        &trans        &trans  &trans    &mmv MOVE_LEFT   &trans     &trans  &trans         &trans           &trans             &bootloader
&kp LEFT_SHIFT  &trans            &trans        &trans        &trans  &trans    &mmv MOVE_RIGHT  &trans     &trans  &trans         &rgb_ug RGB_EFF  &rgb_ug RGB_TOG    &kp RIGHT_SHIFT
&trans          &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_GUI  &trans  &trans    &mkp LCLK        &soft_off  &trans  &kp RIGHT_GUI  &kp RIGHT_ALT    &kp RIGHT_CONTROL
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "LAYER2";
        };
    };
};
